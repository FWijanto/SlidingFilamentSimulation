Module[{n = 2000,
  speedrange = 100, speedstep = 1,
  initialpvector = {0.84, 0.16},
  averagestart = 1., averageend = 3.,
  v, s, r1, p, f, t = 0, loadlist = {}},
 Do[
  s = Table[RandomReal[{-d0/2, d0/2}], {n}];
  p = Table[RandomChoice[initialpvector -> {0, 1}], {n}];
  f = Total[
    (Table[1 - Unitize[p - i]
        , {i, 
         Table[i, {i, 2 - neighbourtest[neighbourcriterion], -1, 1}]~
          Join~Table[i, {i, 2, neighbourtest[neighbourcriterion]}]}
        ]*Table[-i*d0 + s
        , {i, 
         Table[i, {i, 2 - neighbourtest[neighbourcriterion], -1, 1}]~
          Join~Table[i, {i, 2, neighbourtest[neighbourcriterion]}]}
        ])~Join~{((1 - Unitize[p - 1])*s)}
    ];
  pathvector = Reap[Do[
       Sow[{t, 
         MapThread[(If[Negative[#1] == False, #1 + #2, 
             If[#2 == 1, #1 + #2 - 1, #1 + #2]]) &, {Quotient[s, 
            d0, -d0/2], p}], f}];
       r1 = Table[RandomReal[], {n}];
       p = 
        p + (1 - Unitize[p])*
          MapThread[Boole[#1 < #2] &, {r1, g[swrapped[s], p]}] + 
         attachmentfunctionplus[s, p, r1] + 
         attachmentfunctionminus[s, p, r1] - 
         p*MapThread[Boole[#1 >= #2] &, {r1, cumulativeprob[s, p]}]*
          MapThread[
           Boole[#1 <= #2] &, {r1, r[s, p] + cumulativeprob[s, p]}];
       s = (1 - Unitize[p])*Mod[s + v \[CapitalDelta]t0, d0, -d0/2] + 
         Unitize[p]*(s + v \[CapitalDelta]t0);
       f = Total[
         (Table[1 - Unitize[p - i]
             , {i, 
              Table[i, {i, 2 - neighbourtest[neighbourcriterion], -1, 
                 1}]~Join~
               Table[i, {i, 2, neighbourtest[neighbourcriterion]}]}
             ]*Table[-i*d0 + s
             , {i, 
              Table[i, {i, 2 - neighbourtest[neighbourcriterion], -1, 
                 1}]~Join~
               Table[i, {i, 2, neighbourtest[neighbourcriterion]}]}
             ])~Join~{((1 - Unitize[p - 1])*s)}
         ];
       t = t + \[CapitalDelta]t0;
       , {Nrealisation + 1}];
     ][[2, 1]];
  
  (*load "as is"*)
  (*meanload=Table[{pathvector[[2,1,i,1]],Mean[
  pathvector[[2,1,i,3]]]},{i,Nrealisation+1}];*)
  
  (*load normalised by bridge density*)
  
  meanload = 
   Table[{pathvector[[i, 1]], d0*Mean[pathvector[[i, 3]]]}, {i, 
     Nrealisation + 1}];
  
  AppendTo[loadlist, 
   averageloadextractor[meanload, averagestart, averageend]];
  
  , {v, 1, speedrange, speedstep}];
 loadspeeddata = 
  Partition[Riffle[Range[speedrange], Transpose[loadlist][[1]]], 2];
 ]
