(*dictionary for convenient access of parameters*)
parameterlookuptableloadcontrol[
   parametername_String] := <|
    "Nrealisation" -> parametersforexport[[1]],
    "kon" -> parametersforexport[[2]],
    "timeconstant" -> parametersforexport[[3]],
    "k0" -> parametersforexport[[4]],
    "energyconstant" -> parametersforexport[[5]],
    "d0" -> parametersforexport[[6]],
    "neighbourcriterion" -> parametersforexport[[7]],
    "n" -> parametersforexport[[8]],
    "initialpvector" -> parametersforexport[[9]],
    "fprescribed" -> parametersforexport[[10]]|>[parametername];

parameterlookuptablespeedcontrol[
   parametername_String] := <|
    "Nrealisation" -> parametersforexport[[1]],
    "kon" -> parametersforexport[[2]],
    "timeconstant" -> parametersforexport[[3]],
    "k0" -> parametersforexport[[4]],
    "energyconstant" -> parametersforexport[[5]],
    "d0" -> parametersforexport[[6]],
    "\[CapitalDelta]t0" -> parametersforexport[[7]],
    "neighbourcriterion" -> parametersforexport[[8]],
    "n" -> parametersforexport[[9]],
    "initialpvector" -> parametersforexport[[10]],
    "vprescribed" -> parametersforexport[[11]]|>[parametername];

    (*Export functions*)

exportfunctionloadcontrol[pathvectorname_, exportlocation_,
   varyingparameter_,
   varyingparameteractivationflag_(*whether to activate the varying \
parameter descriptor or not. Value is True or False*),
   identifieractivationflag_(*whether to activate the file identifier \
or not. Value is True or False*), optionalfileidentifier_] :=

  Module[{varyingparametervalue, columnlength},
   SetDirectory[exportlocation];
   Export[
    "ParameterValues" <>
     If[identifieractivationflag == True, optionalfileidentifier] <>
     ".dat", Prepend[{parametersforexport}, {"Nrealisation", "kon",
      "timeconstant", "k0", "energyconstant", "d0",
      "neighbourcriterion", "n",
      "initialpvector (pdetached, pattached)", varyingparameter}]];

   varyingparametervalue =
    IntegerString[Round[parameterlookuptableloadcontrol[varyingparameter]]];
   columnlength = Round[parameterlookuptableloadcontrol["n"]];

   Export[
    "time_" <>
     If[varyingparameteractivationflag == True, varyingparameter,
      ""] <> If[identifieractivationflag == True,
      optionalfileidentifier, ""] <> ".dat",
    Prepend[pathvectorname[[2, 1]],
     PadRight[{"time"}, columnlength, Null]]];
   Export[
    "p_" <> If[varyingparameteractivationflag == True,
      varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
      ""] <> ".dat",
    Prepend[pathvectorname[[2, 2]],
     PadRight[{"p (each line is the p vector for one time step)"},
      columnlength, Null]]];
   Export[
    "s_" <> If[varyingparameteractivationflag == True,
      varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
      ""] <> ".dat",
    Prepend[pathvectorname[[2, 3]],
     PadRight[{"s (each line is the s vector for one time step)"},
      columnlength, Null]]];
   Export[
    "ftotal_" <>
     If[varyingparameteractivationflag == True, varyingparameter,
      ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
      ""] <> ".dat",
    Prepend[pathvectorname[[2, 4]],
     PadRight[{"ftotal"}, columnlength, Null]]];
   ];

exportfunctionspeedcontrol[pathvectorname_, exportlocation_,
  varyingparameter_,
  varyingparameteractivationflag_(*whether to activate the varying \
parameter descriptor or not. Value is True or False*),
  identifieractivationflag_(*whether to activate the file identifier \
or not. Value is True or False*), optionalfileidentifier_] :=

 Module[{varyingparametervalue, columnlength},
  SetDirectory[exportlocation];
  Export["ParameterValues" <>
    If[identifieractivationflag == True, optionalfileidentifier] <>
    ".dat", Prepend[{parametersforexport}, {"Nrealisation", "kon",
     "timeconstant", "k0", "energyconstant", "d0",
     "\[CapitalDelta]t0", "neighbourcriterion", "n",
     "initialpvector (pdetached, pattached)", varyingparameter}]];

  varyingparametervalue =
   IntegerString[Round[parameterlookuptablespeedcontrol[varyingparameter]]];
  columnlength = Round[parameterlookuptablespeedcontrol["n"]];

  Export["time_" <>
    If[varyingparameteractivationflag == True, varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
     ""] <> ".dat",
   Prepend[pathvectorname[[2, 1]],
    PadRight[{"time"}, columnlength, Null]]];
  Export["p_" <>
    If[varyingparameteractivationflag == True, varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
     ""] <> ".dat",
   Prepend[pathvectorname[[2, 2]],
    PadRight[{"p (each line is the p vector for one time step)"},
     columnlength, Null]]];
  Export["f_" <>
    If[varyingparameteractivationflag == True, varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
     ""] <> ".dat",
   Prepend[pathvectorname[[2, 3]],
    PadRight[{"f (each line is the f vector for one time step)"},
     columnlength, Null]]];
  Export["ftotal_" <>
    If[varyingparameteractivationflag == True, varyingparameter, ""] <>
     If[identifieractivationflag == True, optionalfileidentifier,
     ""] <> ".dat",
   Prepend[pathvectorname[[2, 4]],
    PadRight[{"ftotal"}, columnlength, Null]]];

    (*------------------------------------------------------------------------*)
(*helper function to identify level specification for different kinds of imported parameters*)
    levelspecforparametertype[parametertype_] :=
  If[StringMatchQ[parametertype,
    RegularExpression["(time_).+|(ftotal_).+"]], 1, 0];

(*import function. Generates a pathvector variable*)
importpathvectorcomponents[locationfolder_,
  parameterlist_(*insert file format to be imported for each \
parameter in a list*),
  prescribedforcelookupfile_(*File name where the prescribed force \
can be looked up*)] := Module[{},
  SetDirectory[locationfolder];
  MapAt[Flatten[#, 1] &,
   Reap[
    Do[
     Sow[
       Flatten[
        Rest[First[Import[parameterlist[[i]]]]]
        , levelspecforparametertype[parameterlist[[i]]]]
       ];
     , {i, Length[parameterlist]}];
    Sow[Nest[Last, Import[prescribedforcelookupfile], 3]];
    ]
   , 2]
  ]
